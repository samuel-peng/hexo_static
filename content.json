{"meta":{"title":"Samuel Peng","subtitle":"Programming Log","description":null,"author":"Samuel Peng","url":"http://samuelpeng.com/blog"},"pages":[{"title":"About Me","date":"2018-07-07T07:54:46.000Z","updated":"2018-07-07T04:57:58.327Z","comments":true,"path":"about/index.html","permalink":"http://samuelpeng.com/blog/about/index.html","excerpt":"","text":"I’m Samuel Peng, and I am a…Programmer.I am interested in &amp; work with: C++ Swift JavaScript Python Java I’ve been involved in: Hackathons iOS Development Web Development More… Singer-SongwriterVisit my website @ joelsparksmusic.com to learn more about the music I make. Neflix LoverI love watching… Grey’s Anatomy Scandal Criminal Minds Person of Interest Sherlock House of Cards … Contact me? Telegram: @sjpeng GitHub: samuel-peng Twitter: @samueljpeng Email: samuelpeng1@gmail.com"}],"posts":[{"title":"Word Ladder","slug":"word-ladder","date":"2018-07-07T10:10:20.000Z","updated":"2018-07-07T05:25:33.085Z","comments":true,"path":"2018/07/07/word-ladder/","link":"","permalink":"http://samuelpeng.com/blog/2018/07/07/word-ladder/","excerpt":"","text":"You know it, the classic word ladder problem. It turns out to be part 1 of my second assignment at Stanford&nbsp;University.For those of you who don’t know about word ladder (I doubt there is any), here’s a condensed version of the problem description. Input: a dictionary file and two words.Objective: find a path to go from the first word to the second, by changing one letter each time.Output: the path from word 1 to word two. Simple enough. However, the problem requires the program not to use recursion but use BFS to accomplish such task. It’s a fairly easy problem, and the pseudocode was even given to us: to find a path from word 1 to word 2: create a queue of stacks, initially containing only a single stack storing {word 1}. loop until queue is empty (can&apos;t find the path) or word 2 is found: dequeue a stack s. for each valid unused English word w that differs by 1 letter of the word on top of s create a new stack s2 whose contents are s + w added on top add s2 to the queue","categories":[{"name":"Programming","slug":"Programming","permalink":"http://samuelpeng.com/blog/categories/Programming/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://samuelpeng.com/blog/tags/C/"},{"name":"BFS","slug":"BFS","permalink":"http://samuelpeng.com/blog/tags/BFS/"},{"name":"Classic","slug":"Classic","permalink":"http://samuelpeng.com/blog/tags/Classic/"}]}]}